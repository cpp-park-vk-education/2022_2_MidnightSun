name: d.litvak-workflow

on:
  push:
    branches: [ dev/ci_setup ]
jobs:
  build-project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install gtest manually
        run: sudo apt-get install libgtest-dev libgmock-dev &&
             sudo apt-get install libtbb-dev &&
             cd /usr/src/googletest/ &&
             sudo mkdir build &&
             cd build &&
             sudo cmake .. &&
             sudo make && 
             sudo cp lib/* /usr/lib 

      - name: Building
        run: |
          cmake -B build
          cmake --build build
      
      - name: Upload our build dir
        uses: actions/upload-artifact@v3
        with:
          name: build-dir
          path: build

  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install cppcheck
        run: sudo apt install cppcheck

      - name: Run cppcheck
        run: cppcheck project --enable=all --inconclusive --error-exitcode=1 -I.
    
      - name: Install cpplint
        run: pip install cpplint

      - name: Run cpplint
        run: cpplint --recursive .
        
      - name: Configuration with clang-tidy
        run: mkdir build &&
             cd build &&
             cmake DWITH_CLANG_TIDY=on .. &&
             make

  unit-tests:
    needs: [ build-project ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
  
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-dir
          path: build
      
      - name: Run unit-tests
        run: cd build && 
             ctest
      
  memtest:
    needs: [ build-project ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-dir
          path: build

      - name: Set up environment
        run: sudo apt update &&
             sudo apt install -y libev-dev
   
      - name: Install valgrind
        run: sudo apt install valgrind

      - name: Run valgrind
        run: cd build && 
             valgrind --tool=memcheck --leak-check=summary --leak-check=full --track-origins=yes ctest

      - name: Configuration with fsanitazer
        run:  cd build &&
              cmake -DWITH_MEMCHECK=ON .. &&
              make

      - name: Run fsanitaze
        run: cd build &&
             ctest
  # valgrind:
  #   needs: [ build-project ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

      # - name: Download build dir
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: build-artifact
      #     path: build
  # valgrind:
  #   needs: [build-project]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

      # - name: Download build dir
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: build-dir
      #     path: build
  
  #     - name: Set up environment
  #       run: sudo apt update &&
  #            sudo apt install -y libev-dev
   
  #     - name: Install valgrind
  #       run: sudo apt install valgrind

  #     - name: Move to workspace
  #       run: cd build &&
  #            valgrind --tool=memcheck --leak-check=summary --leak-check=full --track-origins=yes ctest


      # linters:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install cppcheck
  #       run: sudo apt install cppcheck

  #     - name: Run cppcheck
  #       run: cppcheck project --enable=all --inconclusive --error-exitcode=1 -I.
    
  #     - name: Install cpplint
  #       run: pip install cpplint

  #     - name: Run cpplint
  #       run: cpplint --recursive .

      # - name: valgrind
      #   run: |
      #     chmod 777 ${{github.workspace}}/build/Tests/MOND_DB_TESTS
      #     valgrind --tool=memcheck --leak-check=yes ${{github.workspace}}/build/Tests/MOND_DB_TESTS
  

      # - name: Install scan-build
      #   run: pip install scan-build

      # - name: Default configuration
      #   run: cd build &&
      #        cmake .. &&
      #        make 

      # - name: Run scan-build
      #   run: cd build &&
      #        scan-build ctest

  # unit-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
    
  #     - name: Install gtest manually
  #       run: sudo apt-get install libgtest-dev libgmock-dev &&
  #            sudo apt-get install libtbb-dev &&
  #            cd /usr/src/googletest/ &&
  #            sudo mkdir build &&
  #            cd build &&
  #            sudo cmake .. &&
  #            sudo make && 
  #            sudo cp lib/* /usr/lib 
      
  #     - name: Default configuration
  #       run: mkdir build &&
  #            cd build &&
  #            cmake .. &&
  #            make  
      
  #     - name: Run unit-tests
  #       run: cd build && 
  #            ctest

  # memtest:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-python@v1

  #     - name: Install gtest manually
  #       run: sudo apt-get install libgtest-dev libgmock-dev &&
  #            sudo apt-get install libtbb-dev &&
  #            cd /usr/src/googletest/ &&
  #            sudo mkdir build &&
  #            cd build &&
  #            sudo cmake .. &&
  #            sudo make && 
  #            sudo cp lib/* /usr/lib 
      
  #     - name: Default configuration
  #       run: mkdir build &&
  #            cd build &&
  #            cmake .. &&
  #            make

  #     - name: Set up environment
  #       run: sudo apt update &&
  #            sudo apt install -y libev-dev
   
  #     - name: Install valgrind
  #       run: sudo apt install valgrind

  #     - name: Run valgrind
  #       run: cd build && 
  #            valgrind --tool=memcheck --leak-check=summary --leak-check=full --track-origins=yes ctest

  #     - name: Configuration with fsanitazer
  #       run:  cd build &&
  #             cmake -DWITH_MEMCHECK=ON .. &&
  #             make

  #     - name: Run fsanitaze
  #       run: cd build &&
  #            ctest
